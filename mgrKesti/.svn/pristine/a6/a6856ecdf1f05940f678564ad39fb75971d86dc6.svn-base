package mgrKesti.predictMmInfo.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import mgrKesti.common.service.CommonService;
import mgrKesti.predictMmInfo.service.PredictMmService;
import mgrKesti.predictMmInfo.vo.PredictMmInfoVO;

/**
* <pre>
* ClassName : PgtInfoController.java
* Description : PgtInfoController Class
* Modification Information
*
* 수정일		수정자		   수정내용
* ---------	   ---------   -------------------------------
* 2020. 03. 24.	  yis	   최초생성
*
* Copyright (C) by KR All right reserved.
* </pre>
* @author KESTI 공수 관리 시스템
* @since 2020. 03. 24.
* @version 1.0
*
*/

@Controller
@RequestMapping("/predictInfo/*")
public class PredictMmController {

	private static final Logger logger = LoggerFactory.getLogger(PredictMmController.class);

	/** PredictMmService */
	@Resource(name = "predictMmService")
	PredictMmService predictMmService;

	/** commonService */
	@Resource(name = "commonService")
	CommonService commonService;

	/**
	 * <pre>
	 * 프로젝트 공수관리 리스트 조회
	 * </pre>
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws Exception
	 * @author yis
	 * @since 2020. 03. 24.
	 */
	@RequestMapping(value = "/predictMmListLookup")
	public String predictMmListLookup(HttpServletRequest req, HttpServletResponse res, Model model) throws Exception{
		logger.debug("========= predictMmListLookup start ===========");

		//로그인정보
		HttpSession httpSession = req.getSession();
		String userId = (String)httpSession.getAttribute("userId");
		String authId = (String)httpSession.getAttribute("authId");

		logger.debug("userId : " + userId);
		logger.debug("authId : " + authId);
		
		//로그인 접속여부
		if(!"".equals(userId) && userId != null){		//null일떄 로그인화면으로 이동
			
			List<PredictMmInfoVO> predictMmInfoList = predictMmService.selectPredictMmListInfo();

			logger.debug("predictMmInfoList size : " + predictMmInfoList.size());
			
			model.addAttribute("userId", userId);
			model.addAttribute("authId", authId);
			model.addAttribute("predictMmInfoList", predictMmInfoList);
			return "/predictMmInfo/predictMm";
		}else{
			model.addAttribute("passFlag", "2");
			return "/loginInfo/login";
		}
	}
	
	/**
	 * <pre>
	 * 프로젝트 공수관리 단건 조회
	 * </pre>
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws Exception
	 * @author yis
	 * @since 2020. 03. 24.
	 */
	@RequestMapping(value = "/predictMmLookup")
	public @ResponseBody Map<String, Object> predictMmLookup(HttpServletRequest req, HttpServletResponse res, Model model, PredictMmInfoVO predictMmInfoVO) throws Exception{
		logger.debug("========= predictMmLookup start ===========");
		Map<String, Object> message = new HashMap<String, Object>();
		
		HashMap<String, Object> map = new HashMap<String, Object>();
		
		logger.debug("aaaaaaaaa : " + predictMmInfoVO.getPmsSeqId());
		logger.debug("aaaaaaaaa : " + predictMmInfoVO.getManagerId());
		logger.debug("aaaaaaaaa : " + predictMmInfoVO.getPmsUserRoleCode());
		map.put("pmsSeqId", predictMmInfoVO.getPmsSeqId());					//시퀀스정보
		map.put("managerId", predictMmInfoVO.getManagerId());				//담당자id
		map.put("pmsUserRoleCode", predictMmInfoVO.getPmsUserRoleCode());	//담당자 역할 상세
	
		HashMap<String, Object> predictMmInfo = predictMmService.selectPredictMmInfo(map);
		
		message.put("predictMmInfo", predictMmInfo);
		logger.debug("========= predictMmLookup end ===========");
		return message;
	}
	
	/**
	 * <pre>
	 * 예상공수 삭제
	 * </pre>
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws Exception
	 * @author yis
	 * @since 2020. 03. 24.
	 */
	@RequestMapping("/deletePredictMmInfo")
	public String deletePredictMmInfo(HttpServletRequest req, HttpServletResponse res, PredictMmInfoVO predictMmInfoVO)throws Exception{
		logger.debug("========= deletePredictMmInfo START ===========");
		
		HashMap<String, Object> map = new HashMap<String, Object>();
		
		map.put("pmsSeqId", predictMmInfoVO.getPmsSeqId());					//시퀀스정보
		map.put("managerId", predictMmInfoVO.getManagerId());				//담당자id
		map.put("pmsUserRoleCode", predictMmInfoVO.getPmsUserRoleCode());	//담당자 역할 상세
		
		predictMmService.deletePredictMmInfo(map);
		
		logger.debug("========= deletePredictMmInfo END ===========");
		return "redirect:/predictInfo/predictMmListLookup.do";
	}
}